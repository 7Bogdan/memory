{"version":3,"sources":["playBoard/infoGame/infoForBoard.js","playBoard/board/Square.js","playBoard/board/Info.js","playBoard/board/Board.js","App.js","index.js"],"names":["Square","props","className","onClick","click","change","index","id","flipped","style","color","infoSquares","interimArr","infoColors","i","RandomColor","push","backgroundColor","Math","random","toString","substring","toUpperCase","arr","length","j","floor","shuffle","Info","colors","map","Array","from","Set","infoColor","steps","key","Board","useState","infoForSquares","setInfoForSquares","firstSquare","setFirstSquare","secondSquare","setSecondSquare","setSteps","setClick","changeSquare","makeStep","flipper","rememberSquare","square","useEffect","setTimeout","restart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.162bd4e7.chunk.js","sourcesContent":["let infoSquares = [];\r\nlet interimArr = [];\r\nexport let infoColors = [];\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n  let color = RandomColor();\r\n  let id = i;\r\n  interimArr.push({color, id}, {color, id});\r\n}\r\n\r\nfor (let i = 0; i < 16; i++) {\r\n  let id = interimArr[i].id;\r\n  let color = interimArr[i].color;\r\n  let index = i;\r\n  let flipped = false;\r\n  infoColors.push({color});\r\n  infoSquares.push({color, id, index, flipped});\r\n}\r\n\r\nfunction RandomColor() {\r\n  let backgroundColor =\r\n    '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase();\r\n  return {backgroundColor};\r\n}\r\n\r\nfunction shuffle(arr) {\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n  }\r\n}\r\nshuffle(infoSquares);\r\nexport default infoSquares;\r\n","import React from \"react\";\n\nconst Square = (props) => {\n  return (\n    <div\n      className={\"memory-square\"}\n      onClick={() => (props.click ? props.change(props.index, props.id) : null)}\n    >\n      <div className={\"front-square\"} />\n      <div\n        className={props.flipped ? \"back-square\" : \"back-square.flip\"}\n        style={props.color}\n      />\n    </div>\n  );\n};\nexport default Square;\n","import React from \"react\";\r\nimport infoColors from \"../infoGame/infoForBoard.js\";\r\n\r\nconst Info = (props) => {\r\n  let colors = infoColors;\r\n\r\n  let infoColor = () => {\r\n    let arr = [];\r\n    colors.map((color) => arr.push(color.color));\r\n    return Array.from(new Set(arr));\r\n  };\r\n\r\n  let color = infoColor();\r\n\r\n  let listColors = () => {\r\n    return (\r\n      <ol>\r\n        {\" \"}\r\n        {color.map((color, index) => (\r\n          <li key={index} className=\"mark\" style={color} />\r\n        ))}\r\n      </ol>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-info\">\r\n      <div className=\"game-stape\">Stape: {props.steps} </div>\r\n      {listColors()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Square from \"./Square.js\";\r\nimport Info from \"./Info.js\";\r\nimport infoSquares from \"../infoGame/infoForBoard.js\";\r\n\r\nfunction Board() {\r\n  let [infoForSquares, setInfoForSquares] = useState(infoSquares);\r\n  let [firstSquare, setFirstSquare] = useState(\"firstSquare\");\r\n  let [secondSquare, setSecondSquare] = useState(\"secondSquare\");\r\n  let [steps, setSteps] = useState(0);\r\n  let [click, setClick] = useState(true);\r\n\r\n  let changeSquare = (index, id) => {\r\n    makeStep();\r\n    flipper(index);\r\n    rememberSquare(index, id);\r\n  };\r\n\r\n  let makeStep = () => {\r\n    setSteps(steps + 1);\r\n  };\r\n\r\n  let flipper = (index) => {\r\n    let interimArr = infoForSquares;\r\n    interimArr.map((square) =>\r\n      square.index === index ? (square.flipped = !square.flipped) : null\r\n    );\r\n    setInfoForSquares(interimArr);\r\n  };\r\n\r\n  let rememberSquare = (index, id) => {\r\n        firstSquare === \"firstSquare\"\r\n        ? setFirstSquare({ index, id })\r\n        : setSecondSquare({ index, id });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (steps % 2 === 0) {\r\n      setClick(false);\r\n      setTimeout(restart, 1500);\r\n    }\r\n  }, [steps]);\r\n\r\n  let restart = () => {\r\n    if (firstSquare.id === secondSquare.id) {\r\n      setClick(true);\r\n      setFirstSquare(\"firstSquare\");\r\n      setSecondSquare(\"secondSquare\");\r\n    } else {\r\n      setClick(true);\r\n      flipper(firstSquare.index);\r\n      flipper(secondSquare.index);\r\n      setFirstSquare(\"firstSquare\");\r\n      setSecondSquare(\"secondSquare\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"memory-game\">\r\n        {infoForSquares.map((square) => (\r\n          <Square\r\n            click={click}\r\n            change={changeSquare}\r\n            key={square.index}\r\n            color={square.color}\r\n            flipped={square.flipped}\r\n            index={square.index}\r\n            id={square.id}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Info steps={steps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\nimport './App.css';\nimport Board from './playBoard/board/Board.js';\n\nconst App = () => {\n  return <Board />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}